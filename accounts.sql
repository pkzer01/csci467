DROP TABLE IF EXISTS OrderInfo;
DROP TABLE IF EXISTS Quotes;
DROP TABLE IF EXISTS SalesAssociates;


CREATE TABLE SalesAssociates (
    SalesAssociateID INT NOT NULL AUTO_INCREMENT, -- The ID will be generated by the database, incrementing starting at 1
    CommissionRate FLOAT,
    AssociateName VARCHAR(100),
    AssociatePhone VARCHAR(12),
    AssociateEmail VARCHAR(100),
    PRIMARY KEY(SalesAssociateID)
);

CREATE TABLE Quotes (
    QuoteID INT NOT NULL AUTO_INCREMENT,
    Prices FLOAT,
    Discounts FLOAT,
    SecretNotes VARCHAR(100),
    QuoteStatus VARCHAR(10),
    ItemNum VARCHAR(100),
    Quantity FLOAT,
    SalesAssociateID INT REFERENCES SalesAssociates(SalesAssociateID),
    CustomerID FLOAT,
    PRIMARY KEY(QuoteID)
);

CREATE TABLE OrderInfo (
    PurchaseID INT NOT NULL AUTO_INCREMENT,
    QuoteID INT REFERENCES Quotes(QuoteID),
    CommissionRate FLOAT,
    OrderQuant FLOAT,
    OrderStatus VARCHAR(20),
    PRIMARY KEY(PurchaseID)
);

-- Create Test Data
INSERT INTO SalesAssociates (CommissionRate, AssociateName, AssociatePhone, AssociateEmail)
    values (2.25, 'Roger Huxley', '224-444-4444', 'roger@quotes.com');
    INSERT INTO SalesAssociates (CommissionRate, AssociateName, AssociatePhone, AssociateEmail)
    values (3.55, 'Grant Regular', '224-555-5555', 'grant@quotes.com');

INSERT INTO Quotes (Prices, Discounts, SecretNotes, QuoteStatus, ItemNum, Quantity, SalesAssociateID, CustomerID)
    values (300.99, 1.99, 'The discount is not real, just messing with the customer!', 'Approved', '100-1100', 100, 1, 1);
INSERT INTO Quotes (Prices, Discounts, SecretNotes, QuoteStatus, ItemNum, Quantity, SalesAssociateID, CustomerID)
    values (129.99, 10.27, '', 'Pending', '133-1100', 100, 1, 3);
INSERT INTO Quotes (Prices, Discounts, SecretNotes, QuoteStatus, ItemNum, Quantity, SalesAssociateID, CustomerID)
    values (200.00, 0.00, '', 'Approved', '122-1100', 100, 2, 2);

INSERT INTO OrderInfo (QuoteID, CommissionRate, OrderQuant, OrderStatus)
    values (1, 3.00, 101, 'Pending');
INSERT INTO OrderInfo (QuoteID, CommissionRate, OrderQuant, OrderStatus)
    values (3, 2.55, 1000, 'Pending');